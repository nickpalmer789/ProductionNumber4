1. Have a page                                              # did this so hard
2. Have DB of users/login with MySQL                        # need to handle encryption with bcrypt in php
3. Profile page (show calendar)                             # turned into dashboard, absorbed goals
4. My Calendar page (add/remove multiple ways)              # working
5. My Goals (Manage goals/pomodoro/todo list)               # the dashboard basically
6. Friends page (Search/view my friends)                    # could be easy, similar to manage groups page
7. Notification panel (See notifications/friend requests)   # no idea
8. Settings panel (password change/my profile)              # Working, may need to move elements
9. Group View (See availability of a whole group)           # need to add/show group specific tasks

Extra:
- Timezones
- DST
- Messaging/chat
- Integrate with Trendzy (find events nearby to add to calendar
- Integrate with SkiU (find people to Ski with dirver/passenger type setup)


Todo:
Database - 
	tasks need color selection maybe 

group_calendar - 
    looks incredible
	are privacy settings checked?
    

logout - 
	logout works enough
	this page https://www.sitepoint.com/users-php-sessions-mysql/ is useful

dashboard - 
	looks good for now, can add/delete tasks

login.php - 
	working
	
calendar.php -
	working
    needs tasks to show on it (JS code below to play with)
	
Testing -
	milestone 5 complete

# Js for tasks onto calendaer
var arrays = <?php echo show_tasks($connection); ?>;
var tasksArr = [];
var currentTask;
for (var i = 0; i < arrays.length; i++) {
    var deadlineArr = arrays[i][3].split(" ");

    //Create the actual object
    currentTask = {
        title: arrays[i][2],
        id: arrays[i][0],
        start: arrays[i][3],
        end: deadlineArr,
        dow: dowArr,
        ranges: rangeArr
    }
    //Add the event to the list
    tasksArr.push(currentTask);
}


$tasksQuery = "SELECT * FROM tasks WHERE username = '{$_SESSION['login_user']}'";
$taskResult = mysqli_query($connection, $tasksQuery);
$tasksJSON = json_encode($taskResult->fetch_all(PDO::FETCH_ASSOC));



var newDateObj = moment(oldDateObj).add(30, 'm').toDate();